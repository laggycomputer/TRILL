name: CML
on: [push]
jobs:
  train-and-report:
    runs-on: [self-hosted]
    # optionally use a convenient Ubuntu LTS + DVC + CML container
   # container: 
      # image: docker://ghcr.io/iterative/cml:0-dvc2-base1
      # options: --rm --gpus all --privileged -v /dev:/dev
    steps:
      - uses: Jimver/cuda-toolkit@v0.2.8
        id: cuda-toolkit
        with:
          cuda: '11.7.0'
      # may need to setup Node.js & Python3 on e.g. self-hosted
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - uses: iterative/setup-cml@v1
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          #pip install pytorch-lightning
          pip install torch
          #pip install 'fair-esm[esmfold]'
          #pip install 'dllogger @ git+https://github.com/NVIDIA/dllogger.git'
          #pip install 'openfold @ git+https://github.com/aqlaboratory/openfold.git@4b41059694619831a7db195b7e0988fc4ff3a307'
          #pip install GitPython
          #pip install pandas
          #pip install biotite
          #pip install transformers datasets
          #pip install pyg-lib torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f https://data.pyg.org/whl/torch-1.13.0+cu117.html
      - name: Train model
        run: |
          # Your ML workflow goes here
          python -c "import torch; print(torch.cuda.is_available())"
          nvidia-smi
          #pip install -r requirements.txt
          #python train.py  # generate plot.png
      - name: Test with pytest
        run: |
          pytest
      - name: Create CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Post CML report as a comment in GitHub
          # cat metrics.txt >> report.md
          # echo '![](./plot.png "Confusion Matrix")' >> report.md
          # cml comment create report.md
